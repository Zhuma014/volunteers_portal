version: "3"

services:
  postgres-service:
    image: postgres:14
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
  

  fastapi-service:
    container_name: fastapi
    build:
      context: ./fastapi
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - postgres-service
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-service:5432/${POSTGRES_DB}
    volumes:
      - ./fastapi:/app
    # networks:
    #   - portal
 
    
  # canvas:
  #   image: instructure/canvas-lms:stable
  #   container_name: canvas
  #   ports:
  #     - "3003:3000" 
  #   environment:
  #     - RAILS_ENV=production
  #   networks:
  #     - portal  
  #   depends_on:
  #     - postgres-service

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - postgres-service
    volumes:
      - pgadmin_data:/var/lib/pgadmin


  vue-frontend:
    container_name: vue
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    working_dir: /app
    command: npm run dev -- --host
    # networks:
    #   - portal



volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

# networks:
#   portal:
#     driver: bridge
 


